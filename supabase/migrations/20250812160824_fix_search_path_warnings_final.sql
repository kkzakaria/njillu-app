-- Migration: fix_search_path_warnings_final
-- Description: CORRECTIF FINAL - √âliminer les 3 avertissements Security Advisor sur search_path
-- Date: 2025-08-12
-- Probl√®me: 3 fonctions ont search_path = 'public' au lieu de search_path = '' 
-- Security Advisor: "Function Search Path Mutable" - Requires search_path = '' (empty string)

-- ============================================================================
-- DIAGNOSTIC: 3 Avertissements Security Advisor identifi√©s
-- ============================================================================
-- 1. public.generate_folder_number       -> search_path = 'public' (doit √™tre '')
-- 2. public.trigger_refresh_folder_views -> search_path = 'public' (doit √™tre '')  
-- 3. public.set_folder_number            -> search_path = 'public' (doit √™tre '')
--
-- STRAT√âGIE: Changer search_path = '' + s'assurer que toutes les tables utilisent public.

-- ============================================================================
-- √âTAPE 1: Corriger generate_folder_number
-- ============================================================================

CREATE OR REPLACE FUNCTION generate_folder_number(
  p_transport_type transport_type_enum,
  p_folder_date date DEFAULT CURRENT_DATE
)
RETURNS varchar(15)
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = ''  -- üéØ CORRECTION: '' au lieu de 'public'
AS $$
DECLARE
  v_year integer;
  v_date_part varchar(6);
  v_counter integer;
  v_folder_number varchar(15);
  v_max_retries integer DEFAULT 5;
  v_retry_count integer DEFAULT 0;
BEGIN
  -- Validation des param√®tres d'entr√©e
  IF p_transport_type IS NULL THEN
    RAISE EXCEPTION 'Le type de transport ne peut pas √™tre NULL';
  END IF;
  
  IF p_folder_date IS NULL THEN
    RAISE EXCEPTION 'La date du dossier ne peut pas √™tre NULL';
  END IF;
  
  IF p_folder_date > CURRENT_DATE THEN
    RAISE EXCEPTION 'La date du dossier ne peut pas √™tre dans le futur';
  END IF;
  
  -- Extraction de l'ann√©e et formatage de la date (YYMMDD)
  v_year := EXTRACT(YEAR FROM p_folder_date);
  v_date_part := TO_CHAR(p_folder_date, 'YYMMDD');
  
  -- Boucle de retry pour g√©rer la concurrence
  WHILE v_retry_count < v_max_retries LOOP
    BEGIN
      -- Tentative d'obtenir et incr√©menter le compteur (avec verrou)
      INSERT INTO public.folder_counter (year, counter)  -- ‚úÖ Pr√©fixe explicite
      VALUES (v_year, 1)
      ON CONFLICT (year) DO UPDATE 
      SET 
        counter = public.folder_counter.counter + 1,  -- ‚úÖ Pr√©fixe explicite
        updated_at = now()
      RETURNING counter INTO v_counter;
      
      -- Formatage du num√©ro final: [MTA]YYMMDD-NNNNNN
      v_folder_number := p_transport_type::text || v_date_part || '-' || LPAD(v_counter::text, 6, '0');
      
      -- V√©rification que le num√©ro n'existe pas d√©j√† (double s√©curit√©)
      IF EXISTS (SELECT 1 FROM public.folders WHERE folder_number = v_folder_number) THEN  -- ‚úÖ Pr√©fixe explicite
        -- Num√©ro d√©j√† utilis√©, retry avec le compteur suivant
        v_retry_count := v_retry_count + 1;
        IF v_retry_count >= v_max_retries THEN
          RAISE EXCEPTION 'Impossible de g√©n√©rer un num√©ro unique apr√®s % tentatives', v_max_retries;
        END IF;
        -- Petite pause avant retry (√©vite les conflits rapides)
        PERFORM pg_sleep(0.001 * v_retry_count);
        CONTINUE;
      END IF;
      
      -- Succ√®s - sortir de la boucle
      EXIT;
      
    EXCEPTION
      WHEN OTHERS THEN
        v_retry_count := v_retry_count + 1;
        IF v_retry_count >= v_max_retries THEN
          RAISE EXCEPTION 'Erreur lors de la g√©n√©ration du num√©ro de dossier: %', SQLERRM;
        END IF;
        -- Pause exponentielle avant retry
        PERFORM pg_sleep(0.01 * POWER(2, v_retry_count));
    END;
  END LOOP;
  
  RETURN v_folder_number;
END;
$$;

-- ============================================================================
-- √âTAPE 2: Corriger trigger_refresh_folder_views
-- ============================================================================

CREATE OR REPLACE FUNCTION trigger_refresh_folder_views()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = ''  -- üéØ CORRECTION: '' au lieu de 'public'
AS $$
BEGIN
  -- D√©clencher un rafra√Æchissement des vues quand les dossiers changent
  -- Note: En production, il peut √™tre pr√©f√©rable d'utiliser un syst√®me de queue
  -- pour √©viter de bloquer les transactions
  
  -- La fonction refresh_folder_views_if_needed utilise d√©j√† des v√©rifications internes
  -- et ne d√©pend pas du search_path car elle acc√®de √† information_schema
  PERFORM public.refresh_folder_views_if_needed();  -- ‚úÖ Pr√©fixe explicite
  
  RETURN COALESCE(NEW, OLD);
END;
$$;

-- ============================================================================
-- √âTAPE 3: Corriger set_folder_number
-- ============================================================================

CREATE OR REPLACE FUNCTION set_folder_number()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = ''  -- üéØ CORRECTION: '' au lieu de 'public'
AS $$
BEGIN
  -- G√©n√©rer automatiquement le num√©ro de dossier si pas fourni
  IF NEW.folder_number IS NULL THEN
    -- Appel explicite avec pr√©fixe public
    NEW.folder_number := public.generate_folder_number(NEW.transport_type, NEW.folder_date);  -- ‚úÖ Pr√©fixe explicite
  END IF;
  
  RETURN NEW;
END;
$$;

-- ============================================================================
-- √âTAPE 4: Test de validation compl√®te
-- ============================================================================

-- Test que les 3 fonctions corrig√©es fonctionnent toujours
DO $$
DECLARE
  generated_number varchar(15);
  test_id uuid;
BEGIN
  RAISE NOTICE 'üß™ TEST FINAL: Validation des 3 fonctions corrig√©es...';
  
  -- Test d'insertion compl√®te (utilise set_folder_number -> generate_folder_number)
  BEGIN
    INSERT INTO public.folders (
      transport_type,
      folder_date,
      title,
      status,
      priority,
      client_reference
    ) VALUES (
      'A'::transport_type_enum,
      CURRENT_DATE,
      'Test Security Advisor Fix',
      'draft'::folder_status_enum,
      'urgent',
      'TEST-SECURITY-001'
    )
    RETURNING id, folder_number INTO test_id, generated_number;
    
    RAISE NOTICE '‚úÖ SUCC√àS: Toutes les fonctions fonctionnent!';
    RAISE NOTICE 'üìã folder_number g√©n√©r√©: %', generated_number;
    
    -- Nettoyer le test
    DELETE FROM public.folders WHERE id = test_id;
    RAISE NOTICE 'üßπ Test nettoy√©';
    
    RAISE NOTICE 'üéâ CORRECTIF SECURITY ADVISOR: TERMIN√â!';
    
  EXCEPTION
    WHEN OTHERS THEN
      RAISE NOTICE '‚ùå √âCHEC: %', SQLERRM;
      RAISE EXCEPTION 'Correctif Security Advisor √©chou√©: %', SQLERRM;
  END;
  
END $$;

-- ============================================================================
-- √âTAPE 5: Commentaires mis √† jour
-- ============================================================================

COMMENT ON FUNCTION generate_folder_number(transport_type_enum, date) 
IS 'Fonction s√©curis√©e avec SET search_path = '''' (vide) pour conformit√© Security Advisor - CORRIG√âE 2025-08-12';

COMMENT ON FUNCTION trigger_refresh_folder_views() 
IS 'Fonction s√©curis√©e avec SET search_path = '''' (vide) pour conformit√© Security Advisor - CORRIG√âE 2025-08-12';

COMMENT ON FUNCTION set_folder_number() 
IS 'Fonction s√©curis√©e avec SET search_path = '''' (vide) pour conformit√© Security Advisor - CORRIG√âE 2025-08-12';

-- ============================================================================
-- R√âSUM√â DU CORRECTIF SECURITY ADVISOR
-- ============================================================================

-- ‚úÖ AVANT: 3 avertissements "Function Search Path Mutable"
-- ‚úÖ APR√àS: 0 avertissement (search_path = '' avec pr√©fixes explicites)
-- ‚úÖ FONCTIONNALIT√â: Pr√©serv√©e (toutes les fonctions utilisent public.*)
-- ‚úÖ S√âCURIT√â: Maximale (conformit√© Security Advisor compl√®te)
-- ‚úÖ TESTS: Auto-g√©n√©ration valid√©e int√©gralement